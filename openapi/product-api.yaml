openapi: 3.0.3
info:
  title: Product API
  version: 1.0.0
  description: CRUD API for managing products

servers:
  - url: http://localhost:8080/api

paths:
  /products:
    get:
      summary: Get all products
      operationId: getAllProducts
      tags:
        - Product
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'
    post:
      summary: Create a new product
      operationId: createProduct
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'

  /products/{id}:
    get:
      summary: Get a product by ID
      operationId: getProductById
      tags:
        - Product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '404':
          description: Product not found

    patch:
      summary: Update fields of a product
      operationId: updateProduct
      tags:
        - Product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPatchRequest'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'

    delete:
      summary: Delete a product
      operationId: deleteProduct
      tags:
        - Product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product deleted
  /products/type/{type}:
    get:
      summary: Get products by type
      operationId: getProductsByType
      tags:
        - Product
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Products by type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'
        '404':
          description: No products found for this type

  /products/type/{type}/brand/{brand}:
    get:
      summary: Get products by type and brand
      operationId: getProductsByTypeAndBrand
      tags:
        - Product
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
        - in: path
          name: brand
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Products by type and brand
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'
        '404':
          description: No products found for type and brand

components:
  schemas:
    ProductRequest:
      type: object
      required:
        - name
        - description
        - type
        - brand
        - model
        - status
        - userId
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        brand:
          type: string
        model:
          type: string
        status:
          type: string
        userId:
          type: string

    ProductPatchRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          type: string
        brand:
          type: string
        model:
          type: string
        status:
          type: string

    ProductResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        brand:
          type: string
        model:
          type: string
        status:
          type: string
        userId:
          type: string
        created:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
        modifiedBy:
          type: string